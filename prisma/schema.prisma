generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Organisation {
  id         String       @id @default(cuid())
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  name       String
  nameShort  String
  slugName   String       @unique
  Department Department[]
  User       User[]

  @@unique([id])
}

model Department {
  id                     String               @id @default(cuid())
  createdAt              DateTime             @default(now())
  updatedAt              DateTime             @updatedAt
  name                   String
  nameShort              String
  slugName               String               @unique
  organisation           Organisation         @relation(fields: [organisationId], references: [id])
  organisationId         String
  employees              DepartmentEmployee[]
  Planner                Planner[]
  defaultDepartmentUsers User[]

  @@unique([id])
}

model User {
  id                   String               @id @default(cuid())
  createdAt            DateTime             @default(now())
  updatedAt            DateTime             @updatedAt
  firstName            String
  lastName             String
  email                String               @unique
  passwordHash         String?
  passwordResetToken   String?
  emailValidationToken String?
  organisation         Organisation         @relation(fields: [organisationId], references: [id])
  organisationId       String
  departments          DepartmentEmployee[]
  defaultDepartment    Department           @relation(fields: [defaultDepartmentId], references: [id])
  defaultDepartmentId  String
}

model DepartmentEmployee {
  department          Department @relation(fields: [departmentId], references: [id])
  departmentId        String
  employee            User       @relation(fields: [employeeId], references: [id])
  employeeId          String
  isDefaultDepartment Boolean    @default(false)
  assignedAt          DateTime   @default(now())
  assignedBy          String?

  @@id([departmentId, employeeId])
}

model Planner {
  id           String     @id @default(cuid())
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  name         String
  department   Department @relation(fields: [departmentId], references: [id])
  departmentId String
}

model Booking {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  content   String
}
